#version 450

#extension GL_EXT_control_flow_attributes:enable

layout(binding = 0)      uniform sampler2D zbuffer;
layout(binding = 1, r16) uniform writeonly image2D hiZ;

layout(local_size_x = 16, local_size_y = 16) in;

void main() {
  const ivec2 srcSz = textureSize(zbuffer,0);
  const ivec2 dstSz = imageSize(hiZ);
  const ivec2 uv    = ivec2(gl_GlobalInvocationID.xy);
  if(uv.x>=dstSz.x || uv.y>=dstSz.y)
    return;

  ivec2 begin = ivec2((uv*srcSz)/dstSz);
  ivec2 end   = ivec2(/*ceil*/((uv+ivec2(1,1))*srcSz/dstSz));
  end = min(end, srcSz-ivec2(1,1));

  float z = 0;
  [[unroll]]
  for(int i=0; i<3; ++i) {
    [[unroll]]
    for(int r=0; r<3; ++r) {
      int x = begin.x+i;
      int y = begin.y+r;
      if(x>end.x || y>end.y)
        continue;
      float zbuf = texelFetch(zbuffer,ivec2(x,y),0).x;
      z = max(z,zbuf);
      }
    }

  z = (1.0-z)*20.0;
  z = z - 1.0/32768.0;
  imageStore(hiZ, ivec2(uv), vec4(z));
  }
