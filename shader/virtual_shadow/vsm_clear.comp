#version 450

#extension GL_GOOGLE_include_directive    : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_samplerless_texture_functions : enable

#include "virtual_shadow/vsm_common.glsl"
#include "scene.glsl"

layout(local_size_x = 8, local_size_y = 8) in;

layout(binding = 0, std430) buffer CB0 {
  VsmHeader header;
  uint      pageList[];
  };
layout(binding = 1, r32ui) uniform uimage3D pageTbl;
layout(binding = 2, r32ui) uniform uimage3D pageTblDepth;

void main() {
  const ivec3 at   = ivec3(gl_GlobalInvocationID);
  const ivec3 size = imageSize(pageTbl);
  if(any(greaterThanEqual(at, size)))
    return;

  imageStore(pageTbl, at, uvec4(0));
  // imageStore(pageTblDepth, at, uvec4(floatBitsToUint(1)));
  imageStore(pageTblDepth, at, uvec4(0xFFFFFFFF));

  if(at==ivec3(0)) {
    header.pageCount    = 0;
    header.meshletCount = 0;
    header.counterM     = 0;
    header.counterV     = 0;
    }

  if(gl_LocalInvocationIndex<16) {
    header.pagePerMip[gl_LocalInvocationIndex] = 0;
    header.pageBbox  [gl_LocalInvocationIndex] = ivec4(0xFF, 0xFF, 0, 0);
    header.pageOmniCount = 0;
    }
  }
