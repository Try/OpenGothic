#version 450

#extension GL_GOOGLE_include_directive    : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_samplerless_texture_functions : enable

#include "rtsm_common.glsl"
#include "scene.glsl"

layout(local_size_x = 1) in;

layout(binding = 0, std430) buffer Pos  { uint       alloc;  uint data[];     } pos;
layout(binding = 1, std430) buffer VId  { uvec4      count;  LightId data[];  } vLights;
layout(binding = 2, std430) buffer Rt   { RtsmHeader header; uvec2 visList[]; } rtsm;

void main() {
  if(gl_GlobalInvocationID==ivec3(0)) {
    rtsm.header.visCount = 0;
    rtsm.header.one1     = 1;
    rtsm.header.one2     = 1;

    pos.alloc     = 1; // reserve 0, for nullptr and meshlet-counter
    pos.data[0]   = 0; // num meshelts
    vLights.count = uvec4(0,1,1,0);
    }
  }
